-- 1. Create Customers table
CREATE TABLE IF NOT EXISTS Customers (
    customer_id SERIAL PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT NOT NULL,
    phone TEXT NOT NULL,
    address TEXT NOT NULL
);

-- 2. Create Categories table (Products will reference this)
CREATE TABLE IF NOT EXISTS Categories (
    category_id SERIAL PRIMARY KEY,
    category_name TEXT NOT NULL
);

-- 3. Create Products table (must be created after Categories)
CREATE TABLE IF NOT EXISTS Products (
    product_id SERIAL PRIMARY KEY,
    product_name TEXT NOT NULL,
    category_id INTEGER REFERENCES Categories(category_id),
    description TEXT
);

-- 4. Create Orders table (must be created after Customers)
CREATE TABLE IF NOT EXISTS Orders (
    order_id SERIAL PRIMARY KEY,
    customer_id INTEGER REFERENCES Customers(customer_id),
    order_date DATE NOT NULL,
    total_amount NUMERIC(10, 2) NOT NULL
);

-- 5. Create OrderItems table (must be created after Orders and Products)
CREATE TABLE IF NOT EXISTS OrderItems (
    order_item_id SERIAL PRIMARY KEY,
    order_id INTEGER REFERENCES Orders(order_id),
    product_id INTEGER REFERENCES Products(product_id),
    quantity INTEGER NOT NULL,
    unit_price NUMERIC(10, 2) NOT NULL
);

-- Insert sample data into Customers
INSERT INTO Customers (customer_name, email, phone, address) VALUES
('John Doe', 'johndoe@gmail.com', '555-1234', '123 Maple Street'),
('Jane Smith', 'janesmith@yahoo.com', '555-5678', '456 Oak Avenue'),
('Robert Brown', 'robertb@hotmail.com', '555-8765', '789 Pine Road'),
('Emily Clark', 'emilyc@gmail.com', '555-4321', '321 Cedar Lane'),
('Chris Johnson', 'chrisj@outlook.com', '555-1111', '654 Birch Blvd');

-- Insert sample data into Categories
INSERT INTO Categories (category_name) VALUES
('Engine Parts'), ('Tires'), ('Batteries'), ('Brakes'), ('Suspension');

-- Insert sample data into Products
INSERT INTO Products (product_name, category_id, description) VALUES
('Spark Plug', 1, 'High-quality spark plug for various car models'),
('Car Battery', 3, '12V 60Ah car battery with long lifespan'),
('Brake Pad', 4, 'Durable brake pads for passenger vehicles'),
('Tire 205/55R16', 2, 'All-season tire for compact cars'),
('Shock Absorber', 5, 'Hydraulic shock absorber for smooth suspension');

-- Insert sample data into Orders
INSERT INTO Orders (customer_id, order_date, total_amount) VALUES
(1, '2023-09-10', 350.75),
(2, '2023-09-12', 120.00),
(3, '2023-09-15', 450.50),
(4, '2023-09-18', 320.00),
(5, '2023-09-20', 220.40);

-- Insert sample data into OrderItems
INSERT INTO OrderItems (order_id, product_id, quantity, unit_price) VALUES
(1, 1, 4, 10.00),
(1, 3, 2, 50.00),
(2, 2, 1, 120.00),
(3, 4, 4, 80.00),
(3, 5, 2, 55.00),
(4, 3, 3, 50.00),
(5, 1, 2, 10.00),
(5, 2, 1, 120.00);

WITH order_summary AS (
    SELECT
        o.order_id,
        c.customer_name,
        o.order_date,
        o.total_amount,
        SUM(oi.quantity) AS total_quantity
    FROM
        Orders o
    JOIN
        Customers c ON o.customer_id = c.customer_id
    JOIN
        OrderItems oi ON o.order_id = oi.order_id
    GROUP BY
        o.order_id, c.customer_name, o.order_date, o.total_amount
)
SELECT * FROM order_summary;




WITH product_sales AS (
    SELECT
        p.product_id,
        p.product_name,
        c.category_name AS category,
        SUM(oi.quantity * oi.unit_price) AS total_revenue
    FROM
        Products p
    JOIN
        Categories c ON p.category_id = c.category_id
    JOIN
        OrderItems oi ON p.product_id = oi.product_id
    GROUP BY
        p.product_id, p.product_name, c.category_name
)
-- Selecting the result from the CTE
SELECT * FROM product_sales;
